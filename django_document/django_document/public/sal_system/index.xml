<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sal_systems on Django Documents</title>
    <link>http://example.org/sal_system/</link>
    <description>Recent content in Sal_systems on Django Documents</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 05 Apr 2019 23:32:14 +0900</lastBuildDate>
    
	<atom:link href="http://example.org/sal_system/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>はじめに</title>
      <link>http://example.org/sal_system/page1/</link>
      <pubDate>Fri, 05 Apr 2019 23:32:14 +0900</pubDate>
      
      <guid>http://example.org/sal_system/page1/</guid>
      <description>はじめに ここでは公共施設利活用アプリのファイル構成について書いていく．
前提 Python3インストール済み
Djangoインストール済み
pip3もしくはAnacondaのインストール済み
Gitインストール済み
また、上記についての操作がある程度できる状態．
プログラムのダウンロード プログラムはGitHubに置いてあるので下のコマンドでダウンロードする．
git clone git@github.com:inaba1203mpka/sal_server_test.git  公共施設利活用アプリの作成を引き継ぐにあたって，README.mdにインポートすべきライブラリやそのバージョンについて書いてある．
ファイル構成 ダウンロードしたファイルの構成は下のようになっている．
. ├── README.md └── sal_server ├── manage.py ├── sal_server │ ├── __init__.py │ ├── settings.py │ ├── urls.py │ └── wsgi.py └── system ├── __init__.py ├── admin.py ├── apps.py ├── forms.py ├── migrations │ ├── 0001_initial.py │ └── __init__.py ├── models.py ├── static │ ├── css │ │ └── datepicker-widget.css │ ├── js │ │ ├── datepicker-widget.</description>
    </item>
    
  </channel>
</rss>